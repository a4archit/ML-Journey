{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "406b85f2",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-02-15T09:32:48.727798Z",
     "iopub.status.busy": "2025-02-15T09:32:48.727513Z",
     "iopub.status.idle": "2025-02-15T09:33:00.507792Z",
     "shell.execute_reply": "2025-02-15T09:33:00.506785Z"
    },
    "papermill": {
     "duration": 11.786447,
     "end_time": "2025-02-15T09:33:00.509102",
     "exception": false,
     "start_time": "2025-02-15T09:32:48.722655",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/github-users-profile-descriptions-text-10000-users/description_text\n"
     ]
    }
   ],
   "source": [
    "# This Python 3 environment comes with many helpful analytics libraries installed\n",
    "# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n",
    "# For example, here's several helpful packages to load\n",
    "\n",
    "import numpy as np # linear algebra\n",
    "import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n",
    "\n",
    "\n",
    "import tensorflow as tf \n",
    "from tensorflow import keras\n",
    "from keras import Sequential\n",
    "from keras.layers import Dense, SimpleRNN, LSTM, GRU, BatchNormalization, Dropout, Embedding\n",
    "from tensorflow.keras.preprocessing.sequence import pad_sequences\n",
    "from tensorflow.keras.preprocessing.text import Tokenizer\n",
    "from tensorflow.keras.utils import to_categorical\n",
    "\n",
    "# Input data files are available in the read-only \"../input/\" directory\n",
    "# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n",
    "\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))\n",
    "\n",
    "# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n",
    "# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "72067a89",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:00.516387Z",
     "iopub.status.busy": "2025-02-15T09:33:00.515945Z",
     "iopub.status.idle": "2025-02-15T09:33:00.606156Z",
     "shell.execute_reply": "2025-02-15T09:33:00.605265Z"
    },
    "papermill": {
     "duration": 0.095165,
     "end_time": "2025-02-15T09:33:00.607618",
     "exception": false,
     "start_time": "2025-02-15T09:33:00.512453",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "with open(\"/kaggle/input/github-users-profile-descriptions-text-10000-users/description_text\", 'r', encoding='utf8') as file:\n",
    "    text = file.read()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8d941bc6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:00.614322Z",
     "iopub.status.busy": "2025-02-15T09:33:00.614114Z",
     "iopub.status.idle": "2025-02-15T09:33:00.617628Z",
     "shell.execute_reply": "2025-02-15T09:33:00.616760Z"
    },
    "papermill": {
     "duration": 0.008378,
     "end_time": "2025-02-15T09:33:00.619080",
     "exception": false,
     "start_time": "2025-02-15T09:33:00.610702",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " \n",
      "Hello 👋\n",
      "\n",
      "Great you visited my profile!\n",
      "\n",
      "I'm a software engineer and user experience designer from \n"
     ]
    }
   ],
   "source": [
    "print(text[:100])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "f7aed3ea",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:00.625763Z",
     "iopub.status.busy": "2025-02-15T09:33:00.625519Z",
     "iopub.status.idle": "2025-02-15T09:33:00.630644Z",
     "shell.execute_reply": "2025-02-15T09:33:00.629906Z"
    },
    "papermill": {
     "duration": 0.00981,
     "end_time": "2025-02-15T09:33:00.631822",
     "exception": false,
     "start_time": "2025-02-15T09:33:00.622012",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "939515"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(text)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "eb195629",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:00.638519Z",
     "iopub.status.busy": "2025-02-15T09:33:00.638302Z",
     "iopub.status.idle": "2025-02-15T09:33:00.827715Z",
     "shell.execute_reply": "2025-02-15T09:33:00.826974Z"
    },
    "papermill": {
     "duration": 0.19428,
     "end_time": "2025-02-15T09:33:00.829240",
     "exception": false,
     "start_time": "2025-02-15T09:33:00.634960",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "demo_data = text #text[:400000]\n",
    "cleaned_text = \"\"\n",
    "\n",
    "index = 0\n",
    "for parapgraph in demo_data.split(\"\\n\"):\n",
    "    for sentence in (parapgraph.split(\".\")):\n",
    "        for char in sentence:\n",
    "            if char == \" \":\n",
    "                continue\n",
    "            else:\n",
    "                cleaned_text += \"\\n\" + sentence\n",
    "                index += 1\n",
    "                break\n",
    "tokenizer = Tokenizer(oov_token=\"<no-token>\")\n",
    "tokenizer.fit_on_texts([cleaned_text.lower()])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "2e39e4d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:00.837198Z",
     "iopub.status.busy": "2025-02-15T09:33:00.836927Z",
     "iopub.status.idle": "2025-02-15T09:33:01.255699Z",
     "shell.execute_reply": "2025-02-15T09:33:01.254714Z"
    },
    "papermill": {
     "duration": 0.424522,
     "end_time": "2025-02-15T09:33:01.257348",
     "exception": false,
     "start_time": "2025-02-15T09:33:00.832826",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# tokenizer\n",
    "input_sequences = []\n",
    "for sentence in cleaned_text.split(\"\\n\"):\n",
    "    tokenized_sentence = tokenizer.texts_to_sequences([sentence])[0]\n",
    "\n",
    "    for i in range(1, len(tokenized_sentence)):\n",
    "        input_sequences.append(tokenized_sentence[:i+1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "ed2fee95",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:01.265035Z",
     "iopub.status.busy": "2025-02-15T09:33:01.264765Z",
     "iopub.status.idle": "2025-02-15T09:33:01.600610Z",
     "shell.execute_reply": "2025-02-15T09:33:01.599496Z"
    },
    "papermill": {
     "duration": 0.341278,
     "end_time": "2025-02-15T09:33:01.602125",
     "exception": false,
     "start_time": "2025-02-15T09:33:01.260847",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(133757,)"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "max_words_in_sentence = max([len(x) for x in input_sequences])\n",
    "padded_input_sequences = pad_sequences(input_sequences, maxlen=max_words_in_sentence, padding='pre')\n",
    "X = padded_input_sequences[:, :-1]\n",
    "y = padded_input_sequences[:, -1]\n",
    "y.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "70d6ce4c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:01.610839Z",
     "iopub.status.busy": "2025-02-15T09:33:01.610504Z",
     "iopub.status.idle": "2025-02-15T09:33:02.021383Z",
     "shell.execute_reply": "2025-02-15T09:33:02.020629Z"
    },
    "papermill": {
     "duration": 0.416799,
     "end_time": "2025-02-15T09:33:02.022809",
     "exception": false,
     "start_time": "2025-02-15T09:33:01.606010",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(9424, 35)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "total_words = len(tokenizer.word_index)\n",
    "# OHE\n",
    "y = to_categorical(y, num_classes=total_words+1)\n",
    "total_words, max_words_in_sentence"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "1f00a7f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:02.030482Z",
     "iopub.status.busy": "2025-02-15T09:33:02.030177Z",
     "iopub.status.idle": "2025-02-15T09:33:02.885519Z",
     "shell.execute_reply": "2025-02-15T09:33:02.884546Z"
    },
    "papermill": {
     "duration": 0.860781,
     "end_time": "2025-02-15T09:33:02.887092",
     "exception": false,
     "start_time": "2025-02-15T09:33:02.026311",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/usr/local/lib/python3.10/dist-packages/keras/src/layers/core/embedding.py:90: UserWarning: Argument `input_length` is deprecated. Just remove it.\n",
      "  warnings.warn(\n"
     ]
    }
   ],
   "source": [
    "model = Sequential(name=\"gidhelp_500\")\n",
    "\n",
    "model.add(Embedding(total_words, 100, input_length=max_words_in_sentence))\n",
    "\n",
    "model.add(LSTM(64, dropout=0.25, recurrent_dropout=0.2, return_sequences=True))\n",
    "model.add(Dropout(0.3))\n",
    "\n",
    "model.add(LSTM(128, dropout=0.25, recurrent_dropout=0.2, return_sequences=True))\n",
    "model.add(Dropout(0.3))\n",
    "\n",
    "model.add(LSTM(256, dropout=0.25, recurrent_dropout=0.2, return_sequences=False))\n",
    "model.add(Dropout(0.3))\n",
    "\n",
    "# model.add(LSTM(75, dropout=0.2, recurrent_dropout=0.2, return_sequences=False))\n",
    "\n",
    "# model.add(Dense(512, activation='relu'))\n",
    "# model.add(Dropout(0.3))\n",
    "\n",
    "model.add(Dense(total_words+1, activation='softmax'))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "a8d0c1b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:02.895280Z",
     "iopub.status.busy": "2025-02-15T09:33:02.894983Z",
     "iopub.status.idle": "2025-02-15T09:33:02.924228Z",
     "shell.execute_reply": "2025-02-15T09:33:02.923368Z"
    },
    "papermill": {
     "duration": 0.034759,
     "end_time": "2025-02-15T09:33:02.925449",
     "exception": false,
     "start_time": "2025-02-15T09:33:02.890690",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"gidhelp_500\"</span>\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1mModel: \"gidhelp_500\"\u001b[0m\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
       "┃<span style=\"font-weight: bold\"> Layer (type)                         </span>┃<span style=\"font-weight: bold\"> Output Shape                </span>┃<span style=\"font-weight: bold\">         Param # </span>┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
       "│ embedding (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Embedding</span>)                │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                          │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                    │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">LSTM</span>)                        │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)                  │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                        │ ?                           │     <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (unbuilt) │\n",
       "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n",
       "</pre>\n"
      ],
      "text/plain": [
       "┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━┓\n",
       "┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                        \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape               \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m        Param #\u001b[0m\u001b[1m \u001b[0m┃\n",
       "┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━┩\n",
       "│ embedding (\u001b[38;5;33mEmbedding\u001b[0m)                │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm (\u001b[38;5;33mLSTM\u001b[0m)                          │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout (\u001b[38;5;33mDropout\u001b[0m)                    │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_1 (\u001b[38;5;33mLSTM\u001b[0m)                        │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m)                  │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ lstm_2 (\u001b[38;5;33mLSTM\u001b[0m)                        │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dropout_2 (\u001b[38;5;33mDropout\u001b[0m)                  │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "├──────────────────────────────────────┼─────────────────────────────┼─────────────────┤\n",
       "│ dense (\u001b[38;5;33mDense\u001b[0m)                        │ ?                           │     \u001b[38;5;34m0\u001b[0m (unbuilt) │\n",
       "└──────────────────────────────────────┴─────────────────────────────┴─────────────────┘\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Total params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> (0.00 B)\n",
       "</pre>\n"
      ],
      "text/plain": [
       "\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m0\u001b[0m (0.00 B)\n"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n",
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "67104b03",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T09:33:02.934266Z",
     "iopub.status.busy": "2025-02-15T09:33:02.934014Z",
     "iopub.status.idle": "2025-02-15T10:14:13.748491Z",
     "shell.execute_reply": "2025-02-15T10:14:13.747744Z"
    },
    "papermill": {
     "duration": 2470.820413,
     "end_time": "2025-02-15T10:14:13.750116",
     "exception": false,
     "start_time": "2025-02-15T09:33:02.929703",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m61s\u001b[0m 144ms/step - accuracy: 0.0672 - loss: 6.8107 - val_accuracy: 0.0709 - val_loss: 6.1703\n",
      "Epoch 2/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.0796 - loss: 6.1000 - val_accuracy: 0.1329 - val_loss: 5.8117\n",
      "Epoch 3/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.1337 - loss: 5.6967 - val_accuracy: 0.1654 - val_loss: 5.5537\n",
      "Epoch 4/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 136ms/step - accuracy: 0.1584 - loss: 5.4249 - val_accuracy: 0.1861 - val_loss: 5.3699\n",
      "Epoch 5/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 135ms/step - accuracy: 0.1780 - loss: 5.2118 - val_accuracy: 0.2084 - val_loss: 5.2305\n",
      "Epoch 6/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.1950 - loss: 5.0532 - val_accuracy: 0.2252 - val_loss: 5.1306\n",
      "Epoch 7/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2103 - loss: 4.9026 - val_accuracy: 0.2326 - val_loss: 5.0381\n",
      "Epoch 8/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2177 - loss: 4.7811 - val_accuracy: 0.2438 - val_loss: 4.9735\n",
      "Epoch 9/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 135ms/step - accuracy: 0.2282 - loss: 4.6540 - val_accuracy: 0.2518 - val_loss: 4.9176\n",
      "Epoch 10/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2350 - loss: 4.5575 - val_accuracy: 0.2615 - val_loss: 4.8639\n",
      "Epoch 11/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 136ms/step - accuracy: 0.2445 - loss: 4.4554 - val_accuracy: 0.2639 - val_loss: 4.8403\n",
      "Epoch 12/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2483 - loss: 4.3825 - val_accuracy: 0.2710 - val_loss: 4.8051\n",
      "Epoch 13/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2569 - loss: 4.2843 - val_accuracy: 0.2741 - val_loss: 4.7821\n",
      "Epoch 14/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2611 - loss: 4.2275 - val_accuracy: 0.2790 - val_loss: 4.7740\n",
      "Epoch 15/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 136ms/step - accuracy: 0.2697 - loss: 4.1419 - val_accuracy: 0.2831 - val_loss: 4.7685\n",
      "Epoch 16/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 136ms/step - accuracy: 0.2717 - loss: 4.0888 - val_accuracy: 0.2874 - val_loss: 4.7676\n",
      "Epoch 17/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2751 - loss: 4.0346 - val_accuracy: 0.2914 - val_loss: 4.7604\n",
      "Epoch 18/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 136ms/step - accuracy: 0.2773 - loss: 3.9890 - val_accuracy: 0.2901 - val_loss: 4.7650\n",
      "Epoch 19/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.2799 - loss: 3.9415 - val_accuracy: 0.2938 - val_loss: 4.7668\n",
      "Epoch 20/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2836 - loss: 3.9002 - val_accuracy: 0.2945 - val_loss: 4.7734\n",
      "Epoch 21/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.2839 - loss: 3.8547 - val_accuracy: 0.2965 - val_loss: 4.7808\n",
      "Epoch 22/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 136ms/step - accuracy: 0.2887 - loss: 3.8052 - val_accuracy: 0.2986 - val_loss: 4.7967\n",
      "Epoch 23/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2884 - loss: 3.7815 - val_accuracy: 0.2998 - val_loss: 4.8052\n",
      "Epoch 24/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2932 - loss: 3.7423 - val_accuracy: 0.3007 - val_loss: 4.8176\n",
      "Epoch 25/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2947 - loss: 3.7090 - val_accuracy: 0.3014 - val_loss: 4.8360\n",
      "Epoch 26/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.2963 - loss: 3.6855 - val_accuracy: 0.3008 - val_loss: 4.8503\n",
      "Epoch 27/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.2974 - loss: 3.6635 - val_accuracy: 0.3025 - val_loss: 4.8597\n",
      "Epoch 28/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 136ms/step - accuracy: 0.3006 - loss: 3.6201 - val_accuracy: 0.3036 - val_loss: 4.8754\n",
      "Epoch 29/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3048 - loss: 3.5984 - val_accuracy: 0.3032 - val_loss: 4.8923\n",
      "Epoch 30/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 136ms/step - accuracy: 0.3050 - loss: 3.5722 - val_accuracy: 0.3043 - val_loss: 4.9071\n",
      "Epoch 31/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.3085 - loss: 3.5376 - val_accuracy: 0.3058 - val_loss: 4.9265\n",
      "Epoch 32/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.3060 - loss: 3.5482 - val_accuracy: 0.3067 - val_loss: 4.9419\n",
      "Epoch 33/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3151 - loss: 3.5030 - val_accuracy: 0.3065 - val_loss: 4.9550\n",
      "Epoch 34/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.3129 - loss: 3.4826 - val_accuracy: 0.3077 - val_loss: 4.9835\n",
      "Epoch 35/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 136ms/step - accuracy: 0.3166 - loss: 3.4609 - val_accuracy: 0.3085 - val_loss: 4.9833\n",
      "Epoch 36/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3192 - loss: 3.4396 - val_accuracy: 0.3055 - val_loss: 5.0100\n",
      "Epoch 37/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m48s\u001b[0m 136ms/step - accuracy: 0.3239 - loss: 3.4255 - val_accuracy: 0.3091 - val_loss: 5.0286\n",
      "Epoch 38/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3237 - loss: 3.3971 - val_accuracy: 0.3085 - val_loss: 5.0481\n",
      "Epoch 39/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.3243 - loss: 3.3911 - val_accuracy: 0.3083 - val_loss: 5.0626\n",
      "Epoch 40/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3262 - loss: 3.3758 - val_accuracy: 0.3109 - val_loss: 5.0748\n",
      "Epoch 41/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3290 - loss: 3.3473 - val_accuracy: 0.3104 - val_loss: 5.0870\n",
      "Epoch 42/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3297 - loss: 3.3428 - val_accuracy: 0.3085 - val_loss: 5.1074\n",
      "Epoch 43/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 137ms/step - accuracy: 0.3296 - loss: 3.3331 - val_accuracy: 0.3090 - val_loss: 5.1183\n",
      "Epoch 44/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3317 - loss: 3.3159 - val_accuracy: 0.3100 - val_loss: 5.1407\n",
      "Epoch 45/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3313 - loss: 3.3109 - val_accuracy: 0.3113 - val_loss: 5.1471\n",
      "Epoch 46/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 138ms/step - accuracy: 0.3363 - loss: 3.2832 - val_accuracy: 0.3122 - val_loss: 5.1616\n",
      "Epoch 47/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m50s\u001b[0m 139ms/step - accuracy: 0.3390 - loss: 3.2719 - val_accuracy: 0.3130 - val_loss: 5.1848\n",
      "Epoch 48/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m50s\u001b[0m 139ms/step - accuracy: 0.3411 - loss: 3.2564 - val_accuracy: 0.3133 - val_loss: 5.1888\n",
      "Epoch 49/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m50s\u001b[0m 140ms/step - accuracy: 0.3399 - loss: 3.2507 - val_accuracy: 0.3124 - val_loss: 5.1975\n",
      "Epoch 50/50\n",
      "\u001b[1m356/356\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m49s\u001b[0m 139ms/step - accuracy: 0.3423 - loss: 3.2394 - val_accuracy: 0.3117 - val_loss: 5.2101\n"
     ]
    }
   ],
   "source": [
    "history = model.fit(X,y, epochs=50, batch_size=320, validation_split=0.15)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "9495d05d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T10:14:15.618887Z",
     "iopub.status.busy": "2025-02-15T10:14:15.618428Z",
     "iopub.status.idle": "2025-02-15T10:14:15.622551Z",
     "shell.execute_reply": "2025-02-15T10:14:15.621633Z"
    },
    "papermill": {
     "duration": 0.933939,
     "end_time": "2025-02-15T10:14:15.624080",
     "exception": false,
     "start_time": "2025-02-15T10:14:14.690141",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "#model.save('gidhelp_500.h5')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "cf765bc2",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T10:14:17.443156Z",
     "iopub.status.busy": "2025-02-15T10:14:17.442778Z",
     "iopub.status.idle": "2025-02-15T10:14:17.726774Z",
     "shell.execute_reply": "2025-02-15T10:14:17.725888Z"
    },
    "papermill": {
     "duration": 1.227931,
     "end_time": "2025-02-15T10:14:17.728206",
     "exception": false,
     "start_time": "2025-02-15T10:14:16.500275",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x78d7346524d0>]"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "\n",
    "plt.plot(history.history['accuracy'])\n",
    "plt.plot(history.history['val_accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "510338b1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-02-15T10:14:19.595294Z",
     "iopub.status.busy": "2025-02-15T10:14:19.595000Z",
     "iopub.status.idle": "2025-02-15T10:14:19.787329Z",
     "shell.execute_reply": "2025-02-15T10:14:19.786436Z"
    },
    "papermill": {
     "duration": 1.122583,
     "end_time": "2025-02-15T10:14:19.788926",
     "exception": false,
     "start_time": "2025-02-15T10:14:18.666343",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x78d7344b5480>]"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(history.history['loss'])\n",
    "plt.plot(history.history['val_loss'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8a598dfb",
   "metadata": {
    "papermill": {
     "duration": 0.928397,
     "end_time": "2025-02-15T10:14:21.642845",
     "exception": false,
     "start_time": "2025-02-15T10:14:20.714448",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 6665919,
     "sourceId": 10748252,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30886,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 2498.465942,
   "end_time": "2025-02-15T10:14:24.650839",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-02-15T09:32:46.184897",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
